// This file is auto-generated by @hey-api/openapi-ts

export type PaginatedPostList = {
    count: number;
    next?: string | null;
    previous?: string | null;
    results: Array<Post>;
};

/**
 * Serializer for Post model.
 */
export type PatchedPost = {
    readonly id?: number;
    title?: string;
    content?: string;
    author?: User;
    published?: boolean;
    readonly created_at?: string;
};

/**
 * Serializer for Post model.
 */
export type Post = {
    readonly id: number;
    title: string;
    content: string;
    author: User;
    published?: boolean;
    readonly created_at: string;
};

/**
 * Serializer for User model.
 */
export type User = {
    readonly id: number;
    /**
     * Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
     */
    username: string;
    /**
     * Email address
     */
    email?: string;
    first_name?: string;
    last_name?: string;
    readonly date_joined: string;
};

export type PaginatedPostListWritable = {
    count: number;
    next?: string | null;
    previous?: string | null;
    results: Array<PostWritable>;
};

/**
 * Serializer for Post model.
 */
export type PatchedPostWritable = {
    title?: string;
    content?: string;
    author_id?: number;
    published?: boolean;
};

/**
 * Serializer for Post model.
 */
export type PostWritable = {
    title: string;
    content: string;
    author_id: number;
    published?: boolean;
};

export type ApixPublicApiPostsListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Which field to use when ordering the results.
         */
        ordering?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * A search term.
         */
        search?: string;
    };
    url: '/apix/public_api/posts/';
};

export type ApixPublicApiPostsListResponses = {
    200: PaginatedPostList;
};

export type ApixPublicApiPostsListResponse = ApixPublicApiPostsListResponses[keyof ApixPublicApiPostsListResponses];

export type ApixPublicApiPostsCreateData = {
    body: PostWritable;
    path?: never;
    query?: never;
    url: '/apix/public_api/posts/';
};

export type ApixPublicApiPostsCreateResponses = {
    201: Post;
};

export type ApixPublicApiPostsCreateResponse = ApixPublicApiPostsCreateResponses[keyof ApixPublicApiPostsCreateResponses];

export type ApixPublicApiPostsDestroyData = {
    body?: never;
    path: {
        /**
         * A unique integer value identifying this post.
         */
        id: number;
    };
    query?: never;
    url: '/apix/public_api/posts/{id}/';
};

export type ApixPublicApiPostsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type ApixPublicApiPostsDestroyResponse = ApixPublicApiPostsDestroyResponses[keyof ApixPublicApiPostsDestroyResponses];

export type ApixPublicApiPostsRetrieveData = {
    body?: never;
    path: {
        /**
         * A unique integer value identifying this post.
         */
        id: number;
    };
    query?: never;
    url: '/apix/public_api/posts/{id}/';
};

export type ApixPublicApiPostsRetrieveResponses = {
    200: Post;
};

export type ApixPublicApiPostsRetrieveResponse = ApixPublicApiPostsRetrieveResponses[keyof ApixPublicApiPostsRetrieveResponses];

export type ApixPublicApiPostsPartialUpdateData = {
    body?: PatchedPostWritable;
    path: {
        /**
         * A unique integer value identifying this post.
         */
        id: number;
    };
    query?: never;
    url: '/apix/public_api/posts/{id}/';
};

export type ApixPublicApiPostsPartialUpdateResponses = {
    200: Post;
};

export type ApixPublicApiPostsPartialUpdateResponse = ApixPublicApiPostsPartialUpdateResponses[keyof ApixPublicApiPostsPartialUpdateResponses];

export type ApixPublicApiPostsUpdateData = {
    body: PostWritable;
    path: {
        /**
         * A unique integer value identifying this post.
         */
        id: number;
    };
    query?: never;
    url: '/apix/public_api/posts/{id}/';
};

export type ApixPublicApiPostsUpdateResponses = {
    200: Post;
};

export type ApixPublicApiPostsUpdateResponse = ApixPublicApiPostsUpdateResponses[keyof ApixPublicApiPostsUpdateResponses];

export type ApixPublicApiPostsPublishCreateData = {
    body: PostWritable;
    path: {
        /**
         * A unique integer value identifying this post.
         */
        id: number;
    };
    query?: never;
    url: '/apix/public_api/posts/{id}/publish/';
};

export type ApixPublicApiPostsPublishCreateResponses = {
    200: Post;
};

export type ApixPublicApiPostsPublishCreateResponse = ApixPublicApiPostsPublishCreateResponses[keyof ApixPublicApiPostsPublishCreateResponses];

export type ApixPublicApiPostsUnpublishCreateData = {
    body: PostWritable;
    path: {
        /**
         * A unique integer value identifying this post.
         */
        id: number;
    };
    query?: never;
    url: '/apix/public_api/posts/{id}/unpublish/';
};

export type ApixPublicApiPostsUnpublishCreateResponses = {
    200: Post;
};

export type ApixPublicApiPostsUnpublishCreateResponse = ApixPublicApiPostsUnpublishCreateResponses[keyof ApixPublicApiPostsUnpublishCreateResponses];

export type ApixPublicApiPostsByAuthorListData = {
    body?: never;
    path?: never;
    query?: {
        author_id?: number;
        /**
         * Which field to use when ordering the results.
         */
        ordering?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * A search term.
         */
        search?: string;
    };
    url: '/apix/public_api/posts/by_author/';
};

export type ApixPublicApiPostsByAuthorListResponses = {
    200: PaginatedPostList;
};

export type ApixPublicApiPostsByAuthorListResponse = ApixPublicApiPostsByAuthorListResponses[keyof ApixPublicApiPostsByAuthorListResponses];

export type ApixPublicApiPostsPublishedListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Which field to use when ordering the results.
         */
        ordering?: string;
        /**
         * A page number within the paginated result set.
         */
        page?: number;
        /**
         * A search term.
         */
        search?: string;
    };
    url: '/apix/public_api/posts/published/';
};

export type ApixPublicApiPostsPublishedListResponses = {
    200: PaginatedPostList;
};

export type ApixPublicApiPostsPublishedListResponse = ApixPublicApiPostsPublishedListResponses[keyof ApixPublicApiPostsPublishedListResponses];

export type ClientOptions = {
    baseUrl: `${string}://${string}` | (string & {});
};